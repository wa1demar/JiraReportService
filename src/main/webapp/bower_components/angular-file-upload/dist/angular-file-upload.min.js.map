{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-file-upload.min.js","webpack:///webpack/bootstrap 9694f7122ccf7bc69418?c8d7","webpack:///./src/index.js?9552","webpack:///./src/config.json?1c25","webpack:///./src/values/options.js?b00e","webpack:///./src/services/FileUploader.js?148d","webpack:///./src/services/FileLikeObject.js?b90b","webpack:///./src/services/FileItem.js?e529","webpack:///./src/services/FileDirective.js?4dd3","webpack:///./src/services/FileSelect.js?5a11","webpack:///./src/services/FileDrop.js?e446","webpack:///./src/services/FileOver.js?26c9","webpack:///./src/directives/FileSelect.js?8405","webpack:///./src/directives/FileDrop.js?82da","webpack:///./src/directives/FileOver.js?6161"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_config","_config2","_options","_options2","_FileUploader","_FileUploader2","_FileLikeObject","_FileLikeObject2","_FileItem","_FileItem2","_FileDirective","_FileDirective2","_FileSelect","_FileSelect2","_FileDrop","_FileDrop2","_FileOver","_FileOver2","_FileSelect3","_FileSelect4","_FileDrop3","_FileDrop4","_FileOver3","_FileOver4","angular","name","value","directive","run","FileUploader","FileLikeObject","FileItem","FileDirective","FileSelect","FileDrop","FileOver","Object","defineProperty","url","alias","headers","queue","progress","autoUpload","removeAfterUpload","method","filters","formData","queueLimit","Number","MAX_VALUE","withCredentials","disableMultipart","_classCallCheck","instance","Constructor","TypeError","__identity","fileUploaderOptions","$rootScope","$http","$window","File","FormData","options","settings","copy","extend","isUploading","_nextIndex","_failFilterIndex","_directives","select","drop","over","unshift","fn","_queueLimitFilter","_folderFilter","_createClass","key","files","_this","list","isArrayLikeObject","arrayOfFilters","_getFilters","count","length","addedFileItems","forEach","some","temp","_isValidFile","fileItem","push","_onAfterAddingFile","filter","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","index","getIndexOfItem","item","cancel","splice","_destroy","remove","transport","isHTML5","_prepareToUploading","prop","abort","items","getNotUploadedItems","upload","constructor","isFile","isFileLikeObject","isNumber","indexOf","isUploaded","isReady","sort","item1","item2","_this2","object","destroy","fileItems","response","status","notUploaded","uploaded","ratio","current","Math","round","isArray","names","match","$$phase","$apply","size","type","file","_this3","every","headersGetter","_headersGetter","defaults","transformResponse","transformFn","val","i","parsed","split","line","slice","trim","toLowerCase","parsedHeaders","sendable","_this4","xhr","_xhr","XMLHttpRequest","_onBeforeUploadItem","_file","append","onprogress","event","lengthComputable","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","_onCompleteItem","onerror","_onErrorItem","onabort","_onCancelItem","open","setRequestHeader","send","_this5","form","element","iframe","Date","now","input","_input","_form","replaceWith","element_","action","target","enctype","encoding","bind","html","contentDocument","body","innerHTML","e","dummy","_onSuccessItem","unbind","after","submit","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onError","onErrorItem","_onCancel","onCancelItem","_onComplete","onCompleteItem","nextItem","getReadyItems","isDefined","onCompleteAll","isObject","source","prototype","create","super_","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_angular","$inject","fileOrInput","isInput","isElement","fakePathOrObject","postfix","isString","path","lastModifiedDate","lastIndexOf","$compile","uploader","isSuccess","isCancel","isError","_replaceNode","uploadItem","cancelItem","removeFromQueue","onBeforeUpload","onProgress","onSuccess","onError","onCancel","onComplete","clone","scope","css","_saveLinks","events","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","extendedOptions","$destroy","change","getPrototypeOf","removeAttr","attr","getOptions","getFilters","addToQueue","isEmptyAfterSelection","dragover","dragleave","transfer","_getTransfer","_preventAndStop","_removeOverClass","_haveFiles","types","dropEffect","_addOverClass","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","addOverClass","removeOverClass","overClass","addClass","getOverClass","removeClass","$parse","link","attributes","$eval"],"mappings":"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","file":"angular-file-upload.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-file-upload\"] = factory();\n\telse\n\t\troot[\"angular-file-upload\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _options = __webpack_require__(2);\n\t\n\tvar _options2 = _interopRequireDefault(_options);\n\t\n\tvar _FileUploader = __webpack_require__(3);\n\t\n\tvar _FileUploader2 = _interopRequireDefault(_FileUploader);\n\t\n\tvar _FileLikeObject = __webpack_require__(4);\n\t\n\tvar _FileLikeObject2 = _interopRequireDefault(_FileLikeObject);\n\t\n\tvar _FileItem = __webpack_require__(5);\n\t\n\tvar _FileItem2 = _interopRequireDefault(_FileItem);\n\t\n\tvar _FileDirective = __webpack_require__(6);\n\t\n\tvar _FileDirective2 = _interopRequireDefault(_FileDirective);\n\t\n\tvar _FileSelect = __webpack_require__(7);\n\t\n\tvar _FileSelect2 = _interopRequireDefault(_FileSelect);\n\t\n\tvar _FileDrop = __webpack_require__(8);\n\t\n\tvar _FileDrop2 = _interopRequireDefault(_FileDrop);\n\t\n\tvar _FileOver = __webpack_require__(9);\n\t\n\tvar _FileOver2 = _interopRequireDefault(_FileOver);\n\t\n\tvar _FileSelect3 = __webpack_require__(10);\n\t\n\tvar _FileSelect4 = _interopRequireDefault(_FileSelect3);\n\t\n\tvar _FileDrop3 = __webpack_require__(11);\n\t\n\tvar _FileDrop4 = _interopRequireDefault(_FileDrop3);\n\t\n\tvar _FileOver3 = __webpack_require__(12);\n\t\n\tvar _FileOver4 = _interopRequireDefault(_FileOver3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tangular.module(_config2.default.name, []).value('fileUploaderOptions', _options2.default).factory('FileUploader', _FileUploader2.default).factory('FileLikeObject', _FileLikeObject2.default).factory('FileItem', _FileItem2.default).factory('FileDirective', _FileDirective2.default).factory('FileSelect', _FileSelect2.default).factory('FileDrop', _FileDrop2.default).factory('FileOver', _FileOver2.default).directive('nvFileSelect', _FileSelect4.default).directive('nvFileDrop', _FileDrop4.default).directive('nvFileOver', _FileOver4.default).run(['FileUploader', 'FileLikeObject', 'FileItem', 'FileDirective', 'FileSelect', 'FileDrop', 'FileOver', function (FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\n\t    // only for compatibility\n\t    FileUploader.FileLikeObject = FileLikeObject;\n\t    FileUploader.FileItem = FileItem;\n\t    FileUploader.FileDirective = FileDirective;\n\t    FileUploader.FileSelect = FileSelect;\n\t    FileUploader.FileDrop = FileDrop;\n\t    FileUploader.FileOver = FileOver;\n\t}]);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"name\": \"angularFileUpload\"\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    url: '/',\n\t    alias: 'file',\n\t    headers: {},\n\t    queue: [],\n\t    progress: 0,\n\t    autoUpload: false,\n\t    removeAfterUpload: false,\n\t    method: 'POST',\n\t    filters: [],\n\t    formData: [],\n\t    queueLimit: Number.MAX_VALUE,\n\t    withCredentials: false,\n\t    disableMultipart: false\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar extend = _angular.extend;\n\tvar forEach = _angular.forEach;\n\tvar isObject = _angular.isObject;\n\tvar isNumber = _angular.isNumber;\n\tvar isDefined = _angular.isDefined;\n\tvar isArray = _angular.isArray;\n\tvar element = _angular.element;\n\tfunction __identity(fileUploaderOptions, $rootScope, $http, $window, FileLikeObject, FileItem) {\n\t    var File = $window.File;\n\t    var FormData = $window.FormData;\n\t\n\t    var FileUploader = function () {\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Creates an instance of FileUploader\n\t         * @param {Object} [options]\n\t         * @constructor\n\t         */\n\t\n\t        function FileUploader(options) {\n\t            _classCallCheck(this, FileUploader);\n\t\n\t            var settings = copy(fileUploaderOptions);\n\t\n\t            extend(this, settings, options, {\n\t                isUploading: false,\n\t                _nextIndex: 0,\n\t                _failFilterIndex: -1,\n\t                _directives: { select: [], drop: [], over: [] }\n\t            });\n\t\n\t            // add default filters\n\t            this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t            this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t        }\n\t        /**\n\t         * Adds items to the queue\n\t         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n\t         * @param {Object} [options]\n\t         * @param {Array<Function>|String} filters\n\t         */\n\t\n\t\n\t        _createClass(FileUploader, [{\n\t            key: 'addToQueue',\n\t            value: function addToQueue(files, options, filters) {\n\t                var _this = this;\n\t\n\t                var list = this.isArrayLikeObject(files) ? files : [files];\n\t                var arrayOfFilters = this._getFilters(filters);\n\t                var count = this.queue.length;\n\t                var addedFileItems = [];\n\t\n\t                forEach(list, function (some /*{File|HTMLInputElement|Object}*/) {\n\t                    var temp = new FileLikeObject(some);\n\t\n\t                    if (_this._isValidFile(temp, arrayOfFilters, options)) {\n\t                        var fileItem = new FileItem(_this, some, options);\n\t                        addedFileItems.push(fileItem);\n\t                        _this.queue.push(fileItem);\n\t                        _this._onAfterAddingFile(fileItem);\n\t                    } else {\n\t                        var filter = arrayOfFilters[_this._failFilterIndex];\n\t                        _this._onWhenAddingFileFailed(temp, filter, options);\n\t                    }\n\t                });\n\t\n\t                if (this.queue.length !== count) {\n\t                    this._onAfterAddingAll(addedFileItems);\n\t                    this.progress = this._getTotalProgress();\n\t                }\n\t\n\t                this._render();\n\t                if (this.autoUpload) this.uploadAll();\n\t            }\n\t            /**\n\t             * Remove items from the queue. Remove last: index = -1\n\t             * @param {FileItem|Number} value\n\t             */\n\t\n\t        }, {\n\t            key: 'removeFromQueue',\n\t            value: function removeFromQueue(value) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                if (item.isUploading) item.cancel();\n\t                this.queue.splice(index, 1);\n\t                item._destroy();\n\t                this.progress = this._getTotalProgress();\n\t            }\n\t            /**\n\t             * Clears the queue\n\t             */\n\t\n\t        }, {\n\t            key: 'clearQueue',\n\t            value: function clearQueue() {\n\t                while (this.queue.length) {\n\t                    this.queue[0].remove();\n\t                }\n\t                this.progress = 0;\n\t            }\n\t            /**\n\t             * Uploads a item from the queue\n\t             * @param {FileItem|Number} value\n\t             */\n\t\n\t        }, {\n\t            key: 'uploadItem',\n\t            value: function uploadItem(value) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t\n\t                item._prepareToUploading();\n\t                if (this.isUploading) return;\n\t\n\t                this.isUploading = true;\n\t                this[transport](item);\n\t            }\n\t            /**\n\t             * Cancels uploading of item from the queue\n\t             * @param {FileItem|Number} value\n\t             */\n\t\n\t        }, {\n\t            key: 'cancelItem',\n\t            value: function cancelItem(value) {\n\t                var index = this.getIndexOfItem(value);\n\t                var item = this.queue[index];\n\t                var prop = this.isHTML5 ? '_xhr' : '_form';\n\t                if (item && item.isUploading) item[prop].abort();\n\t            }\n\t            /**\n\t             * Uploads all not uploaded items of queue\n\t             */\n\t\n\t        }, {\n\t            key: 'uploadAll',\n\t            value: function uploadAll() {\n\t                var items = this.getNotUploadedItems().filter(function (item) {\n\t                    return !item.isUploading;\n\t                });\n\t                if (!items.length) return;\n\t\n\t                forEach(items, function (item) {\n\t                    return item._prepareToUploading();\n\t                });\n\t                items[0].upload();\n\t            }\n\t            /**\n\t             * Cancels all uploads\n\t             */\n\t\n\t        }, {\n\t            key: 'cancelAll',\n\t            value: function cancelAll() {\n\t                var items = this.getNotUploadedItems();\n\t                forEach(items, function (item) {\n\t                    return item.cancel();\n\t                });\n\t            }\n\t            /**\n\t             * Returns \"true\" if value an instance of File\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'isFile',\n\t            value: function isFile(value) {\n\t                return this.constructor.isFile(value);\n\t            }\n\t            /**\n\t             * Returns \"true\" if value an instance of FileLikeObject\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'isFileLikeObject',\n\t            value: function isFileLikeObject(value) {\n\t                return this.constructor.isFileLikeObject(value);\n\t            }\n\t            /**\n\t             * Returns \"true\" if value is array like object\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             */\n\t\n\t        }, {\n\t            key: 'isArrayLikeObject',\n\t            value: function isArrayLikeObject(value) {\n\t                return this.constructor.isArrayLikeObject(value);\n\t            }\n\t            /**\n\t             * Returns a index of item from the queue\n\t             * @param {Item|Number} value\n\t             * @returns {Number}\n\t             */\n\t\n\t        }, {\n\t            key: 'getIndexOfItem',\n\t            value: function getIndexOfItem(value) {\n\t                return isNumber(value) ? value : this.queue.indexOf(value);\n\t            }\n\t            /**\n\t             * Returns not uploaded items\n\t             * @returns {Array}\n\t             */\n\t\n\t        }, {\n\t            key: 'getNotUploadedItems',\n\t            value: function getNotUploadedItems() {\n\t                return this.queue.filter(function (item) {\n\t                    return !item.isUploaded;\n\t                });\n\t            }\n\t            /**\n\t             * Returns items ready for upload\n\t             * @returns {Array}\n\t             */\n\t\n\t        }, {\n\t            key: 'getReadyItems',\n\t            value: function getReadyItems() {\n\t                return this.queue.filter(function (item) {\n\t                    return item.isReady && !item.isUploading;\n\t                }).sort(function (item1, item2) {\n\t                    return item1.index - item2.index;\n\t                });\n\t            }\n\t            /**\n\t             * Destroys instance of FileUploader\n\t             */\n\t\n\t        }, {\n\t            key: 'destroy',\n\t            value: function destroy() {\n\t                var _this2 = this;\n\t\n\t                forEach(this._directives, function (key) {\n\t                    forEach(_this2._directives[key], function (object) {\n\t                        object.destroy();\n\t                    });\n\t                });\n\t            }\n\t            /**\n\t             * Callback\n\t             * @param {Array} fileItems\n\t             */\n\t\n\t        }, {\n\t            key: 'onAfterAddingAll',\n\t            value: function onAfterAddingAll(fileItems) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} fileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'onAfterAddingFile',\n\t            value: function onAfterAddingFile(fileItem) {}\n\t            /**\n\t             * Callback\n\t             * @param {File|Object} item\n\t             * @param {Object} filter\n\t             * @param {Object} options\n\t             */\n\t\n\t        }, {\n\t            key: 'onWhenAddingFileFailed',\n\t            value: function onWhenAddingFileFailed(item, filter, options) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} fileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'onBeforeUploadItem',\n\t            value: function onBeforeUploadItem(fileItem) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} fileItem\n\t             * @param {Number} progress\n\t             */\n\t\n\t        }, {\n\t            key: 'onProgressItem',\n\t            value: function onProgressItem(fileItem, progress) {}\n\t            /**\n\t             * Callback\n\t             * @param {Number} progress\n\t             */\n\t\n\t        }, {\n\t            key: 'onProgressAll',\n\t            value: function onProgressAll(progress) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onSuccessItem',\n\t            value: function onSuccessItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onErrorItem',\n\t            value: function onErrorItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onCancelItem',\n\t            value: function onCancelItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onCompleteItem',\n\t            value: function onCompleteItem(item, response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             */\n\t\n\t        }, {\n\t            key: 'onCompleteAll',\n\t            value: function onCompleteAll() {}\n\t            /**********************\n\t             * PRIVATE\n\t             **********************/\n\t            /**\n\t             * Returns the total progress\n\t             * @param {Number} [value]\n\t             * @returns {Number}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_getTotalProgress',\n\t            value: function _getTotalProgress(value) {\n\t                if (this.removeAfterUpload) return value || 0;\n\t\n\t                var notUploaded = this.getNotUploadedItems().length;\n\t                var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t                var ratio = 100 / this.queue.length;\n\t                var current = (value || 0) * ratio / 100;\n\t\n\t                return Math.round(uploaded * ratio + current);\n\t            }\n\t            /**\n\t             * Returns array of filters\n\t             * @param {Array<Function>|String} filters\n\t             * @returns {Array<Function>}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_getFilters',\n\t            value: function _getFilters(filters) {\n\t                if (!filters) return this.filters;\n\t                if (isArray(filters)) return filters;\n\t                var names = filters.match(/[^\\s,]+/g);\n\t                return this.filters.filter(function (filter) {\n\t                    return names.indexOf(filter.name) !== -1;\n\t                });\n\t            }\n\t            /**\n\t             * Updates html\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_render',\n\t            value: function _render() {\n\t                if (!$rootScope.$$phase) $rootScope.$apply();\n\t            }\n\t            /**\n\t             * Returns \"true\" if item is a file (not folder)\n\t             * @param {File|FileLikeObject} item\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_folderFilter',\n\t            value: function _folderFilter(item) {\n\t                return !!(item.size || item.type);\n\t            }\n\t            /**\n\t             * Returns \"true\" if the limit has not been reached\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_queueLimitFilter',\n\t            value: function _queueLimitFilter() {\n\t                return this.queue.length < this.queueLimit;\n\t            }\n\t            /**\n\t             * Returns \"true\" if file pass all filters\n\t             * @param {File|Object} file\n\t             * @param {Array<Function>} filters\n\t             * @param {Object} options\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_isValidFile',\n\t            value: function _isValidFile(file, filters, options) {\n\t                var _this3 = this;\n\t\n\t                this._failFilterIndex = -1;\n\t                return !filters.length ? true : filters.every(function (filter) {\n\t                    _this3._failFilterIndex++;\n\t                    return filter.fn.call(_this3, file, options);\n\t                });\n\t            }\n\t            /**\n\t             * Checks whether upload successful\n\t             * @param {Number} status\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_isSuccessCode',\n\t            value: function _isSuccessCode(status) {\n\t                return status >= 200 && status < 300 || status === 304;\n\t            }\n\t            /**\n\t             * Transforms the server response\n\t             * @param {*} response\n\t             * @param {Object} headers\n\t             * @returns {*}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_transformResponse',\n\t            value: function _transformResponse(response, headers) {\n\t                var headersGetter = this._headersGetter(headers);\n\t                forEach($http.defaults.transformResponse, function (transformFn) {\n\t                    response = transformFn(response, headersGetter);\n\t                });\n\t                return response;\n\t            }\n\t            /**\n\t             * Parsed response headers\n\t             * @param headers\n\t             * @returns {Object}\n\t             * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_parseHeaders',\n\t            value: function _parseHeaders(headers) {\n\t                var parsed = {},\n\t                    key,\n\t                    val,\n\t                    i;\n\t\n\t                if (!headers) return parsed;\n\t\n\t                forEach(headers.split('\\n'), function (line) {\n\t                    i = line.indexOf(':');\n\t                    key = line.slice(0, i).trim().toLowerCase();\n\t                    val = line.slice(i + 1).trim();\n\t\n\t                    if (key) {\n\t                        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t                    }\n\t                });\n\t\n\t                return parsed;\n\t            }\n\t            /**\n\t             * Returns function that returns headers\n\t             * @param {Object} parsedHeaders\n\t             * @returns {Function}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_headersGetter',\n\t            value: function _headersGetter(parsedHeaders) {\n\t                return function (name) {\n\t                    if (name) {\n\t                        return parsedHeaders[name.toLowerCase()] || null;\n\t                    }\n\t                    return parsedHeaders;\n\t                };\n\t            }\n\t            /**\n\t             * The XMLHttpRequest transport\n\t             * @param {FileItem} item\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_xhrTransport',\n\t            value: function _xhrTransport(item) {\n\t                var _this4 = this;\n\t\n\t                var xhr = item._xhr = new XMLHttpRequest();\n\t                var sendable;\n\t\n\t                this._onBeforeUploadItem(item);\n\t\n\t                if (!item.disableMultipart) {\n\t                    sendable = new FormData();\n\t                    forEach(item.formData, function (obj) {\n\t                        forEach(obj, function (value, key) {\n\t                            sendable.append(key, value);\n\t                        });\n\t                    });\n\t\n\t                    sendable.append(item.alias, item._file, item.file.name);\n\t                } else {\n\t                    sendable = item._file;\n\t                }\n\t\n\t                if (typeof item._file.size != 'number') {\n\t                    throw new TypeError('The file specified is no longer valid');\n\t                }\n\t\n\t                xhr.upload.onprogress = function (event) {\n\t                    var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t                    _this4._onProgressItem(item, progress);\n\t                };\n\t\n\t                xhr.onload = function () {\n\t                    var headers = _this4._parseHeaders(xhr.getAllResponseHeaders());\n\t                    var response = _this4._transformResponse(xhr.response, headers);\n\t                    var gist = _this4._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t                    var method = '_on' + gist + 'Item';\n\t                    _this4[method](item, response, xhr.status, headers);\n\t                    _this4._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                xhr.onerror = function () {\n\t                    var headers = _this4._parseHeaders(xhr.getAllResponseHeaders());\n\t                    var response = _this4._transformResponse(xhr.response, headers);\n\t                    _this4._onErrorItem(item, response, xhr.status, headers);\n\t                    _this4._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                xhr.onabort = function () {\n\t                    var headers = _this4._parseHeaders(xhr.getAllResponseHeaders());\n\t                    var response = _this4._transformResponse(xhr.response, headers);\n\t                    _this4._onCancelItem(item, response, xhr.status, headers);\n\t                    _this4._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                xhr.open(item.method, item.url, true);\n\t\n\t                xhr.withCredentials = item.withCredentials;\n\t\n\t                forEach(item.headers, function (value, name) {\n\t                    xhr.setRequestHeader(name, value);\n\t                });\n\t\n\t                xhr.send(sendable);\n\t                this._render();\n\t            }\n\t            /**\n\t             * The IFrame transport\n\t             * @param {FileItem} item\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_iframeTransport',\n\t            value: function _iframeTransport(item) {\n\t                var _this5 = this;\n\t\n\t                var form = element('<form style=\"display: none;\" />');\n\t                var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n\t                var input = item._input;\n\t\n\t                if (item._form) item._form.replaceWith(input); // remove old form\n\t                item._form = form; // save link to new form\n\t\n\t                this._onBeforeUploadItem(item);\n\t\n\t                input.prop('name', item.alias);\n\t\n\t                forEach(item.formData, function (obj) {\n\t                    forEach(obj, function (value, key) {\n\t                        var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n\t                        element_.val(value);\n\t                        form.append(element_);\n\t                    });\n\t                });\n\t\n\t                form.prop({\n\t                    action: item.url,\n\t                    method: 'POST',\n\t                    target: iframe.prop('name'),\n\t                    enctype: 'multipart/form-data',\n\t                    encoding: 'multipart/form-data' // old IE\n\t                });\n\t\n\t                iframe.bind('load', function () {\n\t                    var html = '';\n\t                    var status = 200;\n\t\n\t                    try {\n\t                        // Fix for legacy IE browsers that loads internal error page\n\t                        // when failed WS response received. In consequence iframe\n\t                        // content access denied error is thrown becouse trying to\n\t                        // access cross domain page. When such thing occurs notifying\n\t                        // with empty response object. See more info at:\n\t                        // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n\t                        // Note that if non standard 4xx or 5xx error code returned\n\t                        // from WS then response content can be accessed without error\n\t                        // but 'XHR' status becomes 200. In order to avoid confusion\n\t                        // returning response via same 'success' event handler.\n\t\n\t                        // fixed angular.contents() for iframes\n\t                        html = iframe[0].contentDocument.body.innerHTML;\n\t                    } catch (e) {\n\t                        // in case we run into the access-is-denied error or we have another error on the server side\n\t                        // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n\t                        status = 500;\n\t                    }\n\t\n\t                    var xhr = { response: html, status: status, dummy: true };\n\t                    var headers = {};\n\t                    var response = _this5._transformResponse(xhr.response, headers);\n\t\n\t                    _this5._onSuccessItem(item, response, xhr.status, headers);\n\t                    _this5._onCompleteItem(item, response, xhr.status, headers);\n\t                });\n\t\n\t                form.abort = function () {\n\t                    var xhr = { status: 0, dummy: true };\n\t                    var headers = {};\n\t                    var response;\n\t\n\t                    iframe.unbind('load').prop('src', 'javascript:false;');\n\t                    form.replaceWith(input);\n\t\n\t                    _this5._onCancelItem(item, response, xhr.status, headers);\n\t                    _this5._onCompleteItem(item, response, xhr.status, headers);\n\t                };\n\t\n\t                input.after(form);\n\t                form.append(input).append(iframe);\n\t\n\t                form[0].submit();\n\t                this._render();\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {File|Object} item\n\t             * @param {Object} filter\n\t             * @param {Object} options\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onWhenAddingFileFailed',\n\t            value: function _onWhenAddingFileFailed(item, filter, options) {\n\t                this.onWhenAddingFileFailed(item, filter, options);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             */\n\t\n\t        }, {\n\t            key: '_onAfterAddingFile',\n\t            value: function _onAfterAddingFile(item) {\n\t                this.onAfterAddingFile(item);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {Array<FileItem>} items\n\t             */\n\t\n\t        }, {\n\t            key: '_onAfterAddingAll',\n\t            value: function _onAfterAddingAll(items) {\n\t                this.onAfterAddingAll(items);\n\t            }\n\t            /**\n\t             *  Inner callback\n\t             * @param {FileItem} item\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onBeforeUploadItem',\n\t            value: function _onBeforeUploadItem(item) {\n\t                item._onBeforeUpload();\n\t                this.onBeforeUploadItem(item);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {Number} progress\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onProgressItem',\n\t            value: function _onProgressItem(item, progress) {\n\t                var total = this._getTotalProgress(progress);\n\t                this.progress = total;\n\t                item._onProgress(progress);\n\t                this.onProgressItem(item, progress);\n\t                this.onProgressAll(total);\n\t                this._render();\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onSuccessItem',\n\t            value: function _onSuccessItem(item, response, status, headers) {\n\t                item._onSuccess(response, status, headers);\n\t                this.onSuccessItem(item, response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onErrorItem',\n\t            value: function _onErrorItem(item, response, status, headers) {\n\t                item._onError(response, status, headers);\n\t                this.onErrorItem(item, response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onCancelItem',\n\t            value: function _onCancelItem(item, response, status, headers) {\n\t                item._onCancel(response, status, headers);\n\t                this.onCancelItem(item, response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {FileItem} item\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onCompleteItem',\n\t            value: function _onCompleteItem(item, response, status, headers) {\n\t                item._onComplete(response, status, headers);\n\t                this.onCompleteItem(item, response, status, headers);\n\t\n\t                var nextItem = this.getReadyItems()[0];\n\t                this.isUploading = false;\n\t\n\t                if (isDefined(nextItem)) {\n\t                    nextItem.upload();\n\t                    return;\n\t                }\n\t\n\t                this.onCompleteAll();\n\t                this.progress = this._getTotalProgress();\n\t                this._render();\n\t            }\n\t            /**********************\n\t             * STATIC\n\t             **********************/\n\t            /**\n\t             * Returns \"true\" if value an instance of File\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }], [{\n\t            key: 'isFile',\n\t            value: function isFile(value) {\n\t                return File && value instanceof File;\n\t            }\n\t            /**\n\t             * Returns \"true\" if value an instance of FileLikeObject\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'isFileLikeObject',\n\t            value: function isFileLikeObject(value) {\n\t                return value instanceof FileLikeObject;\n\t            }\n\t            /**\n\t             * Returns \"true\" if value is array like object\n\t             * @param {*} value\n\t             * @returns {Boolean}\n\t             */\n\t\n\t        }, {\n\t            key: 'isArrayLikeObject',\n\t            value: function isArrayLikeObject(value) {\n\t                return isObject(value) && 'length' in value;\n\t            }\n\t            /**\n\t             * Inherits a target (Class_1) by a source (Class_2)\n\t             * @param {Function} target\n\t             * @param {Function} source\n\t             */\n\t\n\t        }, {\n\t            key: 'inherit',\n\t            value: function inherit(target, source) {\n\t                target.prototype = Object.create(source.prototype);\n\t                target.prototype.constructor = target;\n\t                target.super_ = source;\n\t            }\n\t        }]);\n\t\n\t        return FileUploader;\n\t    }();\n\t\n\t    /**********************\n\t     * PUBLIC\n\t     **********************/\n\t    /**\n\t     * Checks a support the html5 uploader\n\t     * @returns {Boolean}\n\t     * @readonly\n\t     */\n\t\n\t\n\t    FileUploader.prototype.isHTML5 = !!(File && FormData);\n\t    /**********************\n\t     * STATIC\n\t     **********************/\n\t    /**\n\t     * @borrows FileUploader.prototype.isHTML5\n\t     */\n\t    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\t\n\t    return FileUploader;\n\t}\n\t\n\t__identity.$inject = ['fileUploaderOptions', '$rootScope', '$http', '$window', 'FileLikeObject', 'FileItem'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar isElement = _angular.isElement;\n\tvar isString = _angular.isString;\n\tfunction __identity() {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileLikeObject\n\t         * @param {File|HTMLInputElement|Object} fileOrInput\n\t         * @constructor\n\t         */\n\t\n\t        function FileLikeObject(fileOrInput) {\n\t            _classCallCheck(this, FileLikeObject);\n\t\n\t            var isInput = isElement(fileOrInput);\n\t            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n\t            var method = '_createFrom' + postfix;\n\t            this[method](fakePathOrObject);\n\t        }\n\t        /**\n\t         * Creates file like object from fake path string\n\t         * @param {String} path\n\t         * @private\n\t         */\n\t\n\t\n\t        _createClass(FileLikeObject, [{\n\t            key: '_createFromFakePath',\n\t            value: function _createFromFakePath(path) {\n\t                this.lastModifiedDate = null;\n\t                this.size = null;\n\t                this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t                this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t            }\n\t            /**\n\t             * Creates file like object from object\n\t             * @param {File|FileLikeObject} object\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_createFromObject',\n\t            value: function _createFromObject(object) {\n\t                this.lastModifiedDate = copy(object.lastModifiedDate);\n\t                this.size = object.size;\n\t                this.type = object.type;\n\t                this.name = object.name;\n\t            }\n\t        }]);\n\t\n\t        return FileLikeObject;\n\t    }();\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar copy = _angular.copy;\n\tvar extend = _angular.extend;\n\tvar element = _angular.element;\n\tvar isElement = _angular.isElement;\n\tfunction __identity($compile, FileLikeObject) {\n\t\n\t    return function () {\n\t        /**\n\t         * Creates an instance of FileItem\n\t         * @param {FileUploader} uploader\n\t         * @param {File|HTMLInputElement|Object} some\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileItem(uploader, some, options) {\n\t            _classCallCheck(this, FileItem);\n\t\n\t            var isInput = isElement(some);\n\t            var input = isInput ? element(some) : null;\n\t            var file = !isInput ? some : null;\n\t\n\t            extend(this, {\n\t                url: uploader.url,\n\t                alias: uploader.alias,\n\t                headers: copy(uploader.headers),\n\t                formData: copy(uploader.formData),\n\t                removeAfterUpload: uploader.removeAfterUpload,\n\t                withCredentials: uploader.withCredentials,\n\t                disableMultipart: uploader.disableMultipart,\n\t                method: uploader.method\n\t            }, options, {\n\t                uploader: uploader,\n\t                file: new FileLikeObject(some),\n\t                isReady: false,\n\t                isUploading: false,\n\t                isUploaded: false,\n\t                isSuccess: false,\n\t                isCancel: false,\n\t                isError: false,\n\t                progress: 0,\n\t                index: null,\n\t                _file: file,\n\t                _input: input\n\t            });\n\t\n\t            if (input) this._replaceNode(input);\n\t        }\n\t        /**********************\n\t         * PUBLIC\n\t         **********************/\n\t        /**\n\t         * Uploads a FileItem\n\t         */\n\t\n\t\n\t        _createClass(FileItem, [{\n\t            key: 'upload',\n\t            value: function upload() {\n\t                try {\n\t                    this.uploader.uploadItem(this);\n\t                } catch (e) {\n\t                    this.uploader._onCompleteItem(this, '', 0, []);\n\t                    this.uploader._onErrorItem(this, '', 0, []);\n\t                }\n\t            }\n\t            /**\n\t             * Cancels uploading of FileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'cancel',\n\t            value: function cancel() {\n\t                this.uploader.cancelItem(this);\n\t            }\n\t            /**\n\t             * Removes a FileItem\n\t             */\n\t\n\t        }, {\n\t            key: 'remove',\n\t            value: function remove() {\n\t                this.uploader.removeFromQueue(this);\n\t            }\n\t            /**\n\t             * Callback\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'onBeforeUpload',\n\t            value: function onBeforeUpload() {}\n\t            /**\n\t             * Callback\n\t             * @param {Number} progress\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: 'onProgress',\n\t            value: function onProgress(progress) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onSuccess',\n\t            value: function onSuccess(response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onError',\n\t            value: function onError(response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onCancel',\n\t            value: function onCancel(response, status, headers) {}\n\t            /**\n\t             * Callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             */\n\t\n\t        }, {\n\t            key: 'onComplete',\n\t            value: function onComplete(response, status, headers) {}\n\t            /**********************\n\t             * PRIVATE\n\t             **********************/\n\t            /**\n\t             * Inner callback\n\t             */\n\t\n\t        }, {\n\t            key: '_onBeforeUpload',\n\t            value: function _onBeforeUpload() {\n\t                this.isReady = true;\n\t                this.isUploading = true;\n\t                this.isUploaded = false;\n\t                this.isSuccess = false;\n\t                this.isCancel = false;\n\t                this.isError = false;\n\t                this.progress = 0;\n\t                this.onBeforeUpload();\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {Number} progress\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onProgress',\n\t            value: function _onProgress(progress) {\n\t                this.progress = progress;\n\t                this.onProgress(progress);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onSuccess',\n\t            value: function _onSuccess(response, status, headers) {\n\t                this.isReady = false;\n\t                this.isUploading = false;\n\t                this.isUploaded = true;\n\t                this.isSuccess = true;\n\t                this.isCancel = false;\n\t                this.isError = false;\n\t                this.progress = 100;\n\t                this.index = null;\n\t                this.onSuccess(response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onError',\n\t            value: function _onError(response, status, headers) {\n\t                this.isReady = false;\n\t                this.isUploading = false;\n\t                this.isUploaded = true;\n\t                this.isSuccess = false;\n\t                this.isCancel = false;\n\t                this.isError = true;\n\t                this.progress = 0;\n\t                this.index = null;\n\t                this.onError(response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onCancel',\n\t            value: function _onCancel(response, status, headers) {\n\t                this.isReady = false;\n\t                this.isUploading = false;\n\t                this.isUploaded = false;\n\t                this.isSuccess = false;\n\t                this.isCancel = true;\n\t                this.isError = false;\n\t                this.progress = 0;\n\t                this.index = null;\n\t                this.onCancel(response, status, headers);\n\t            }\n\t            /**\n\t             * Inner callback\n\t             * @param {*} response\n\t             * @param {Number} status\n\t             * @param {Object} headers\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_onComplete',\n\t            value: function _onComplete(response, status, headers) {\n\t                this.onComplete(response, status, headers);\n\t                if (this.removeAfterUpload) this.remove();\n\t            }\n\t            /**\n\t             * Destroys a FileItem\n\t             */\n\t\n\t        }, {\n\t            key: '_destroy',\n\t            value: function _destroy() {\n\t                if (this._input) this._input.remove();\n\t                if (this._form) this._form.remove();\n\t                delete this._form;\n\t                delete this._input;\n\t            }\n\t            /**\n\t             * Prepares to uploading\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_prepareToUploading',\n\t            value: function _prepareToUploading() {\n\t                this.index = this.index || ++this.uploader._nextIndex;\n\t                this.isReady = true;\n\t            }\n\t            /**\n\t             * Replaces input element on his clone\n\t             * @param {JQLite|jQuery} input\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_replaceNode',\n\t            value: function _replaceNode(input) {\n\t                var clone = $compile(input.clone())(input.scope());\n\t                clone.prop('value', null); // FF fix\n\t                input.css('display', 'none');\n\t                input.after(clone); // remove jquery dependency\n\t            }\n\t        }]);\n\t\n\t        return FileItem;\n\t    }();\n\t}\n\t\n\t__identity.$inject = ['$compile', 'FileLikeObject'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tfunction __identity() {\n\t    var FileDirective = function () {\n\t        /**\n\t         * Creates instance of {FileDirective} object\n\t         * @param {Object} options\n\t         * @param {Object} options.uploader\n\t         * @param {HTMLElement} options.element\n\t         * @param {Object} options.events\n\t         * @param {String} options.prop\n\t         * @constructor\n\t         */\n\t\n\t        function FileDirective(options) {\n\t            _classCallCheck(this, FileDirective);\n\t\n\t            extend(this, options);\n\t            this.uploader._directives[this.prop].push(this);\n\t            this._saveLinks();\n\t            this.bind();\n\t        }\n\t        /**\n\t         * Binds events handles\n\t         */\n\t\n\t\n\t        _createClass(FileDirective, [{\n\t            key: 'bind',\n\t            value: function bind() {\n\t                for (var key in this.events) {\n\t                    var prop = this.events[key];\n\t                    this.element.bind(key, this[prop]);\n\t                }\n\t            }\n\t            /**\n\t             * Unbinds events handles\n\t             */\n\t\n\t        }, {\n\t            key: 'unbind',\n\t            value: function unbind() {\n\t                for (var key in this.events) {\n\t                    this.element.unbind(key, this.events[key]);\n\t                }\n\t            }\n\t            /**\n\t             * Destroys directive\n\t             */\n\t\n\t        }, {\n\t            key: 'destroy',\n\t            value: function destroy() {\n\t                var index = this.uploader._directives[this.prop].indexOf(this);\n\t                this.uploader._directives[this.prop].splice(index, 1);\n\t                this.unbind();\n\t                // this.element = null;\n\t            }\n\t            /**\n\t             * Saves links to functions\n\t             * @private\n\t             */\n\t\n\t        }, {\n\t            key: '_saveLinks',\n\t            value: function _saveLinks() {\n\t                for (var key in this.events) {\n\t                    var prop = this.events[key];\n\t                    this[prop] = this[prop].bind(this);\n\t                }\n\t            }\n\t        }]);\n\t\n\t        return FileDirective;\n\t    }();\n\t\n\t    /**\n\t     * Map of events\n\t     * @type {Object}\n\t     */\n\t\n\t\n\t    FileDirective.prototype.events = {};\n\t\n\t    return FileDirective;\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileSelect, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileSelect} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileSelect(options) {\n\t            _classCallCheck(this, FileSelect);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    change: 'onChange'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'select'\n\t            });\n\t\n\t            var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(FileSelect).call(this, extendedOptions));\n\t\n\t            if (!_this.uploader.isHTML5) {\n\t                _this.element.removeAttr('multiple');\n\t            }\n\t            _this.element.prop('value', null); // FF fix\n\t            return _this;\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        _createClass(FileSelect, [{\n\t            key: 'getOptions',\n\t            value: function getOptions() {}\n\t            /**\n\t             * Returns filters\n\t             * @return {Array<Function>|String|undefined}\n\t             */\n\t\n\t        }, {\n\t            key: 'getFilters',\n\t            value: function getFilters() {}\n\t            /**\n\t             * If returns \"true\" then HTMLInputElement will be cleared\n\t             * @returns {Boolean}\n\t             */\n\t\n\t        }, {\n\t            key: 'isEmptyAfterSelection',\n\t            value: function isEmptyAfterSelection() {\n\t                return !!this.element.attr('multiple');\n\t            }\n\t            /**\n\t             * Event handler\n\t             */\n\t\n\t        }, {\n\t            key: 'onChange',\n\t            value: function onChange() {\n\t                var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n\t                var options = this.getOptions();\n\t                var filters = this.getFilters();\n\t\n\t                if (!this.uploader.isHTML5) this.destroy();\n\t                this.uploader.addToQueue(files, options, filters);\n\t                if (this.isEmptyAfterSelection()) {\n\t                    this.element.prop('value', null);\n\t                    this.element.replaceWith(this.element = this.element.clone(true)); // IE fix\n\t                }\n\t            }\n\t        }]);\n\t\n\t        return FileSelect;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tvar forEach = _angular.forEach;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileDrop, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileDrop(options) {\n\t            _classCallCheck(this, FileDrop);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy',\n\t                    drop: 'onDrop',\n\t                    dragover: 'onDragOver',\n\t                    dragleave: 'onDragLeave'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'drop'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, Object.getPrototypeOf(FileDrop).call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Returns options\n\t         * @return {Object|undefined}\n\t         */\n\t\n\t\n\t        _createClass(FileDrop, [{\n\t            key: 'getOptions',\n\t            value: function getOptions() {}\n\t            /**\n\t             * Returns filters\n\t             * @return {Array<Function>|String|undefined}\n\t             */\n\t\n\t        }, {\n\t            key: 'getFilters',\n\t            value: function getFilters() {}\n\t            /**\n\t             * Event handler\n\t             */\n\t\n\t        }, {\n\t            key: 'onDrop',\n\t            value: function onDrop(event) {\n\t                var transfer = this._getTransfer(event);\n\t                if (!transfer) return;\n\t                var options = this.getOptions();\n\t                var filters = this.getFilters();\n\t                this._preventAndStop(event);\n\t                forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t                this.uploader.addToQueue(transfer.files, options, filters);\n\t            }\n\t            /**\n\t             * Event handler\n\t             */\n\t\n\t        }, {\n\t            key: 'onDragOver',\n\t            value: function onDragOver(event) {\n\t                var transfer = this._getTransfer(event);\n\t                if (!this._haveFiles(transfer.types)) return;\n\t                transfer.dropEffect = 'copy';\n\t                this._preventAndStop(event);\n\t                forEach(this.uploader._directives.over, this._addOverClass, this);\n\t            }\n\t            /**\n\t             * Event handler\n\t             */\n\t\n\t        }, {\n\t            key: 'onDragLeave',\n\t            value: function onDragLeave(event) {\n\t                if (event.currentTarget === this.element[0]) return;\n\t                this._preventAndStop(event);\n\t                forEach(this.uploader._directives.over, this._removeOverClass, this);\n\t            }\n\t            /**\n\t             * Helper\n\t             */\n\t\n\t        }, {\n\t            key: '_getTransfer',\n\t            value: function _getTransfer(event) {\n\t                return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n\t            }\n\t            /**\n\t             * Helper\n\t             */\n\t\n\t        }, {\n\t            key: '_preventAndStop',\n\t            value: function _preventAndStop(event) {\n\t                event.preventDefault();\n\t                event.stopPropagation();\n\t            }\n\t            /**\n\t             * Returns \"true\" if types contains files\n\t             * @param {Object} types\n\t             */\n\t\n\t        }, {\n\t            key: '_haveFiles',\n\t            value: function _haveFiles(types) {\n\t                if (!types) return false;\n\t                if (types.indexOf) {\n\t                    return types.indexOf('Files') !== -1;\n\t                } else if (types.contains) {\n\t                    return types.contains('Files');\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t            /**\n\t             * Callback\n\t             */\n\t\n\t        }, {\n\t            key: '_addOverClass',\n\t            value: function _addOverClass(item) {\n\t                item.addOverClass();\n\t            }\n\t            /**\n\t             * Callback\n\t             */\n\t\n\t        }, {\n\t            key: '_removeOverClass',\n\t            value: function _removeOverClass(item) {\n\t                item.removeOverClass();\n\t            }\n\t        }]);\n\t\n\t        return FileDrop;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _angular = angular;\n\tvar extend = _angular.extend;\n\tfunction __identity(FileDirective) {\n\t\n\t    return function (_FileDirective) {\n\t        _inherits(FileOver, _FileDirective);\n\t\n\t        /**\n\t         * Creates instance of {FileDrop} object\n\t         * @param {Object} options\n\t         * @constructor\n\t         */\n\t\n\t        function FileOver(options) {\n\t            _classCallCheck(this, FileOver);\n\t\n\t            var extendedOptions = extend(options, {\n\t                // Map of events\n\t                events: {\n\t                    $destroy: 'destroy'\n\t                },\n\t                // Name of property inside uploader._directive object\n\t                prop: 'over',\n\t                // Over class\n\t                overClass: 'nv-file-over'\n\t            });\n\t\n\t            return _possibleConstructorReturn(this, Object.getPrototypeOf(FileOver).call(this, extendedOptions));\n\t        }\n\t        /**\n\t         * Adds over class\n\t         */\n\t\n\t\n\t        _createClass(FileOver, [{\n\t            key: 'addOverClass',\n\t            value: function addOverClass() {\n\t                this.element.addClass(this.getOverClass());\n\t            }\n\t            /**\n\t             * Removes over class\n\t             */\n\t\n\t        }, {\n\t            key: 'removeOverClass',\n\t            value: function removeOverClass() {\n\t                this.element.removeClass(this.getOverClass());\n\t            }\n\t            /**\n\t             * Returns over class\n\t             * @returns {String}\n\t             */\n\t\n\t        }, {\n\t            key: 'getOverClass',\n\t            value: function getOverClass() {\n\t                return this.overClass;\n\t            }\n\t        }]);\n\t\n\t        return FileOver;\n\t    }(FileDirective);\n\t}\n\t\n\t__identity.$inject = ['FileDirective'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileSelect) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileSelect({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileSelect'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity($parse, FileUploader, FileDrop) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            if (!uploader.isHTML5) return;\n\t\n\t            var object = new FileDrop({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOptions = $parse(attributes.options).bind(object, scope);\n\t            object.getFilters = function () {\n\t                return attributes.filters;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['$parse', 'FileUploader', 'FileDrop'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = __identity;\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction __identity(FileUploader, FileOver) {\n\t\n\t    return {\n\t        link: function link(scope, element, attributes) {\n\t            var uploader = scope.$eval(attributes.uploader);\n\t\n\t            if (!(uploader instanceof FileUploader)) {\n\t                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n\t            }\n\t\n\t            var object = new FileOver({\n\t                uploader: uploader,\n\t                element: element\n\t            });\n\t\n\t            object.getOverClass = function () {\n\t                return attributes.overClass || object.overClass;\n\t            };\n\t        }\n\t    };\n\t}\n\t\n\t__identity.$inject = ['FileUploader', 'FileOver'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-file-upload.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9694f7122ccf7bc69418\n **/","'use strict';\r\n\r\n\r\nimport CONFIG from './config.json';\r\n\r\n\r\nimport options from './values/options'\r\n\r\n\r\nimport serviceFileUploader from './services/FileUploader';\r\nimport serviceFileLikeObject from './services/FileLikeObject';\r\nimport serviceFileItem from './services/FileItem';\r\nimport serviceFileDirective from './services/FileDirective';\r\nimport serviceFileSelect from './services/FileSelect';\r\nimport serviceFileDrop from './services/FileDrop';\r\nimport serviceFileOver from './services/FileOver';\r\n\r\n\r\nimport directiveFileSelect from './directives/FileSelect';\r\nimport directiveFileDrop from './directives/FileDrop';\r\nimport directiveFileOver from './directives/FileOver';\r\n\r\n\r\nangular\r\n    .module(CONFIG.name, [])\r\n    .value('fileUploaderOptions', options)\r\n    .factory('FileUploader', serviceFileUploader)\r\n    .factory('FileLikeObject', serviceFileLikeObject)\r\n    .factory('FileItem', serviceFileItem)\r\n    .factory('FileDirective', serviceFileDirective)\r\n    .factory('FileSelect', serviceFileSelect)\r\n    .factory('FileDrop', serviceFileDrop)\r\n    .factory('FileOver', serviceFileOver)\r\n    .directive('nvFileSelect', directiveFileSelect)\r\n    .directive('nvFileDrop', directiveFileDrop)\r\n    .directive('nvFileOver', directiveFileOver)\r\n    .run([\r\n        'FileUploader',\r\n        'FileLikeObject',\r\n        'FileItem',\r\n        'FileDirective',\r\n        'FileSelect',\r\n        'FileDrop',\r\n        'FileOver',\r\n        function(FileUploader, FileLikeObject, FileItem, FileDirective, FileSelect, FileDrop, FileOver) {\r\n            // only for compatibility\r\n            FileUploader.FileLikeObject = FileLikeObject;\r\n            FileUploader.FileItem = FileItem;\r\n            FileUploader.FileDirective = FileDirective;\r\n            FileUploader.FileSelect = FileSelect;\r\n            FileUploader.FileDrop = FileDrop;\r\n            FileUploader.FileOver = FileOver;\r\n        }\r\n    ]);\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = {\n\t\"name\": \"angularFileUpload\"\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config.json\n ** module id = 1\n ** module chunks = 0 1\n **/","'use strict';\n\n\nexport default {\n    url: '/',\n    alias: 'file',\n    headers: {},\n    queue: [],\n    progress: 0,\n    autoUpload: false,\n    removeAfterUpload: false,\n    method: 'POST',\n    filters: [],\n    formData: [],\n    queueLimit: Number.MAX_VALUE,\n    withCredentials: false,\n    disableMultipart: false\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/values/options.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    forEach,\n    isObject,\n    isNumber,\n    isDefined,\n    isArray,\n    element\n    } = angular;\n\n\nexport default function __identity(fileUploaderOptions, $rootScope, $http, $window, FileLikeObject, FileItem) {\n    \n    \n    let {\n        File,\n        FormData\n        } = $window;\n    \n    \n    class FileUploader {\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Creates an instance of FileUploader\n         * @param {Object} [options]\n         * @constructor\n         */\n        constructor(options) {\n            var settings = copy(fileUploaderOptions);\n            \n            extend(this, settings, options, {\n                isUploading: false,\n                _nextIndex: 0,\n                _failFilterIndex: -1,\n                _directives: {select: [], drop: [], over: []}\n            });\n\n            // add default filters\n            this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n            this.filters.unshift({name: 'folder', fn: this._folderFilter});\n        }\n        /**\n         * Adds items to the queue\n         * @param {File|HTMLInputElement|Object|FileList|Array<Object>} files\n         * @param {Object} [options]\n         * @param {Array<Function>|String} filters\n         */\n        addToQueue(files, options, filters) {\n            var list = this.isArrayLikeObject(files) ? files: [files];\n            var arrayOfFilters = this._getFilters(filters);\n            var count = this.queue.length;\n            var addedFileItems = [];\n\n            forEach(list, (some /*{File|HTMLInputElement|Object}*/) => {\n                var temp = new FileLikeObject(some);\n\n                if (this._isValidFile(temp, arrayOfFilters, options)) {\n                    var fileItem = new FileItem(this, some, options);\n                    addedFileItems.push(fileItem);\n                    this.queue.push(fileItem);\n                    this._onAfterAddingFile(fileItem);\n                } else {\n                    var filter = arrayOfFilters[this._failFilterIndex];\n                    this._onWhenAddingFileFailed(temp, filter, options);\n                }\n            });\n\n            if(this.queue.length !== count) {\n                this._onAfterAddingAll(addedFileItems);\n                this.progress = this._getTotalProgress();\n            }\n\n            this._render();\n            if (this.autoUpload) this.uploadAll();\n        }\n        /**\n         * Remove items from the queue. Remove last: index = -1\n         * @param {FileItem|Number} value\n         */\n        removeFromQueue(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            if(item.isUploading) item.cancel();\n            this.queue.splice(index, 1);\n            item._destroy();\n            this.progress = this._getTotalProgress();\n        }\n        /**\n         * Clears the queue\n         */\n        clearQueue() {\n            while(this.queue.length) {\n                this.queue[0].remove();\n            }\n            this.progress = 0;\n        }\n        /**\n         * Uploads a item from the queue\n         * @param {FileItem|Number} value\n         */\n        uploadItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n            item._prepareToUploading();\n            if(this.isUploading) return;\n\n            this.isUploading = true;\n            this[transport](item);\n        }\n        /**\n         * Cancels uploading of item from the queue\n         * @param {FileItem|Number} value\n         */\n        cancelItem(value) {\n            var index = this.getIndexOfItem(value);\n            var item = this.queue[index];\n            var prop = this.isHTML5 ? '_xhr' : '_form';\n            if(item && item.isUploading) item[prop].abort();\n        }\n        /**\n         * Uploads all not uploaded items of queue\n         */\n        uploadAll() {\n            var items = this.getNotUploadedItems().filter(item => !item.isUploading);\n            if(!items.length) return;\n\n            forEach(items, item => item._prepareToUploading());\n            items[0].upload();\n        }\n        /**\n         * Cancels all uploads\n         */\n        cancelAll() {\n            var items = this.getNotUploadedItems();\n            forEach(items, item => item.cancel());\n        }\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFile(value) {\n            return this.constructor.isFile(value);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        isFileLikeObject(value) {\n            return this.constructor.isFileLikeObject(value);\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        isArrayLikeObject(value) {\n            return this.constructor.isArrayLikeObject(value);\n        }\n        /**\n         * Returns a index of item from the queue\n         * @param {Item|Number} value\n         * @returns {Number}\n         */\n        getIndexOfItem(value) {\n            return isNumber(value) ? value : this.queue.indexOf(value);\n        }\n        /**\n         * Returns not uploaded items\n         * @returns {Array}\n         */\n        getNotUploadedItems() {\n            return this.queue.filter(item => !item.isUploaded);\n        }\n        /**\n         * Returns items ready for upload\n         * @returns {Array}\n         */\n        getReadyItems() {\n            return this.queue\n                .filter(item => (item.isReady && !item.isUploading))\n                .sort((item1, item2) => item1.index - item2.index);\n        }\n        /**\n         * Destroys instance of FileUploader\n         */\n        destroy() {\n            forEach(this._directives, (key) => {\n                forEach(this._directives[key], (object) => {\n                    object.destroy();\n                });\n            });\n        }\n        /**\n         * Callback\n         * @param {Array} fileItems\n         */\n        onAfterAddingAll(fileItems) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onAfterAddingFile(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         */\n        onWhenAddingFileFailed(item, filter, options) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         */\n        onBeforeUploadItem(fileItem) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} fileItem\n         * @param {Number} progress\n         */\n        onProgressItem(fileItem, progress) {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         */\n        onProgressAll(progress) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccessItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onErrorItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancelItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCompleteItem(item, response, status, headers) {\n        }\n        /**\n         * Callback\n         */\n        onCompleteAll() {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Returns the total progress\n         * @param {Number} [value]\n         * @returns {Number}\n         * @private\n         */\n        _getTotalProgress(value) {\n            if(this.removeAfterUpload) return value || 0;\n\n            var notUploaded = this.getNotUploadedItems().length;\n            var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n            var ratio = 100 / this.queue.length;\n            var current = (value || 0) * ratio / 100;\n\n            return Math.round(uploaded * ratio + current);\n        }\n        /**\n         * Returns array of filters\n         * @param {Array<Function>|String} filters\n         * @returns {Array<Function>}\n         * @private\n         */\n        _getFilters(filters) {\n            if(!filters) return this.filters;\n            if(isArray(filters)) return filters;\n            var names = filters.match(/[^\\s,]+/g);\n            return this.filters\n                .filter(filter => names.indexOf(filter.name) !== -1);\n        }\n        /**\n         * Updates html\n         * @private\n         */\n        _render() {\n            if(!$rootScope.$$phase) $rootScope.$apply();\n        }\n        /**\n         * Returns \"true\" if item is a file (not folder)\n         * @param {File|FileLikeObject} item\n         * @returns {Boolean}\n         * @private\n         */\n        _folderFilter(item) {\n            return !!(item.size || item.type);\n        }\n        /**\n         * Returns \"true\" if the limit has not been reached\n         * @returns {Boolean}\n         * @private\n         */\n        _queueLimitFilter() {\n            return this.queue.length < this.queueLimit;\n        }\n        /**\n         * Returns \"true\" if file pass all filters\n         * @param {File|Object} file\n         * @param {Array<Function>} filters\n         * @param {Object} options\n         * @returns {Boolean}\n         * @private\n         */\n        _isValidFile(file, filters, options) {\n            this._failFilterIndex = -1;\n            return !filters.length ? true : filters.every((filter) => {\n                this._failFilterIndex++;\n                return filter.fn.call(this, file, options);\n            });\n        }\n        /**\n         * Checks whether upload successful\n         * @param {Number} status\n         * @returns {Boolean}\n         * @private\n         */\n        _isSuccessCode(status) {\n            return (status >= 200 && status < 300) || status === 304;\n        }\n        /**\n         * Transforms the server response\n         * @param {*} response\n         * @param {Object} headers\n         * @returns {*}\n         * @private\n         */\n        _transformResponse(response, headers) {\n            var headersGetter = this._headersGetter(headers);\n            forEach($http.defaults.transformResponse, (transformFn) => {\n                response = transformFn(response, headersGetter);\n            });\n            return response;\n        }\n        /**\n         * Parsed response headers\n         * @param headers\n         * @returns {Object}\n         * @see https://github.com/angular/angular.js/blob/master/src/ng/http.js\n         * @private\n         */\n        _parseHeaders(headers) {\n            var parsed = {}, key, val, i;\n\n            if(!headers) return parsed;\n\n            forEach(headers.split('\\n'), (line) => {\n                i = line.indexOf(':');\n                key = line.slice(0, i).trim().toLowerCase();\n                val = line.slice(i + 1).trim();\n\n                if(key) {\n                    parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n                }\n            });\n\n            return parsed;\n        }\n        /**\n         * Returns function that returns headers\n         * @param {Object} parsedHeaders\n         * @returns {Function}\n         * @private\n         */\n        _headersGetter(parsedHeaders) {\n            return (name) => {\n                if(name) {\n                    return parsedHeaders[name.toLowerCase()] || null;\n                }\n                return parsedHeaders;\n            };\n        }\n        /**\n         * The XMLHttpRequest transport\n         * @param {FileItem} item\n         * @private\n         */\n        _xhrTransport(item) {\n            var xhr = item._xhr = new XMLHttpRequest();\n            var sendable;\n\n            this._onBeforeUploadItem(item);\n\n            if (!item.disableMultipart) {\n                sendable = new FormData();\n                forEach(item.formData, (obj) => {\n                    forEach(obj, (value, key) => {\n                        sendable.append(key, value);\n                    });\n                });\n\n                sendable.append(item.alias, item._file, item.file.name);\n            }\n            else {\n                sendable = item._file;\n            }\n\n            if(typeof(item._file.size) != 'number') {\n                throw new TypeError('The file specified is no longer valid');\n            }\n\n            xhr.upload.onprogress = (event) => {\n                var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n                this._onProgressItem(item, progress);\n            };\n\n            xhr.onload = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                var gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n                var method = '_on' + gist + 'Item';\n                this[method](item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onerror = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onErrorItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.onabort = () => {\n                var headers = this._parseHeaders(xhr.getAllResponseHeaders());\n                var response = this._transformResponse(xhr.response, headers);\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            xhr.open(item.method, item.url, true);\n\n            xhr.withCredentials = item.withCredentials;\n\n            forEach(item.headers, (value, name) => {\n                xhr.setRequestHeader(name, value);\n            });\n\n            xhr.send(sendable);\n            this._render();\n        }\n        /**\n         * The IFrame transport\n         * @param {FileItem} item\n         * @private\n         */\n        _iframeTransport(item) {\n            var form = element('<form style=\"display: none;\" />');\n            var iframe = element('<iframe name=\"iframeTransport' + Date.now() + '\">');\n            var input = item._input;\n\n            if(item._form) item._form.replaceWith(input); // remove old form\n            item._form = form; // save link to new form\n\n            this._onBeforeUploadItem(item);\n\n            input.prop('name', item.alias);\n\n            forEach(item.formData, (obj) => {\n                forEach(obj, (value, key) => {\n                    var element_ = element('<input type=\"hidden\" name=\"' + key + '\" />');\n                    element_.val(value);\n                    form.append(element_);\n                });\n            });\n\n            form.prop({\n                action: item.url,\n                method: 'POST',\n                target: iframe.prop('name'),\n                enctype: 'multipart/form-data',\n                encoding: 'multipart/form-data' // old IE\n            });\n\n            iframe.bind('load', () => {\n                var html = '';\n                var status = 200;\n\n                try {\n                    // Fix for legacy IE browsers that loads internal error page\n                    // when failed WS response received. In consequence iframe\n                    // content access denied error is thrown becouse trying to\n                    // access cross domain page. When such thing occurs notifying\n                    // with empty response object. See more info at:\n                    // http://stackoverflow.com/questions/151362/access-is-denied-error-on-accessing-iframe-document-object\n                    // Note that if non standard 4xx or 5xx error code returned\n                    // from WS then response content can be accessed without error\n                    // but 'XHR' status becomes 200. In order to avoid confusion\n                    // returning response via same 'success' event handler.\n\n                    // fixed angular.contents() for iframes\n                    html = iframe[0].contentDocument.body.innerHTML;\n                } catch(e) {\n                    // in case we run into the access-is-denied error or we have another error on the server side\n                    // (intentional 500,40... errors), we at least say 'something went wrong' -> 500\n                    status = 500;\n                }\n\n                var xhr = {response: html, status: status, dummy: true};\n                var headers = {};\n                var response = this._transformResponse(xhr.response, headers);\n\n                this._onSuccessItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            });\n\n            form.abort = () => {\n                var xhr = {status: 0, dummy: true};\n                var headers = {};\n                var response;\n\n                iframe.unbind('load').prop('src', 'javascript:false;');\n                form.replaceWith(input);\n\n                this._onCancelItem(item, response, xhr.status, headers);\n                this._onCompleteItem(item, response, xhr.status, headers);\n            };\n\n            input.after(form);\n            form.append(input).append(iframe);\n\n            form[0].submit();\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {File|Object} item\n         * @param {Object} filter\n         * @param {Object} options\n         * @private\n         */\n        _onWhenAddingFileFailed(item, filter, options) {\n            this.onWhenAddingFileFailed(item, filter, options);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         */\n        _onAfterAddingFile(item) {\n            this.onAfterAddingFile(item);\n        }\n        /**\n         * Inner callback\n         * @param {Array<FileItem>} items\n         */\n        _onAfterAddingAll(items) {\n            this.onAfterAddingAll(items);\n        }\n        /**\n         *  Inner callback\n         * @param {FileItem} item\n         * @private\n         */\n        _onBeforeUploadItem(item) {\n            item._onBeforeUpload();\n            this.onBeforeUploadItem(item);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {Number} progress\n         * @private\n         */\n        _onProgressItem(item, progress) {\n            var total = this._getTotalProgress(progress);\n            this.progress = total;\n            item._onProgress(progress);\n            this.onProgressItem(item, progress);\n            this.onProgressAll(total);\n            this._render();\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccessItem(item, response, status, headers) {\n            item._onSuccess(response, status, headers);\n            this.onSuccessItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onErrorItem(item, response, status, headers) {\n            item._onError(response, status, headers);\n            this.onErrorItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancelItem(item, response, status, headers) {\n            item._onCancel(response, status, headers);\n            this.onCancelItem(item, response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {FileItem} item\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCompleteItem(item, response, status, headers) {\n            item._onComplete(response, status, headers);\n            this.onCompleteItem(item, response, status, headers);\n\n            var nextItem = this.getReadyItems()[0];\n            this.isUploading = false;\n\n            if(isDefined(nextItem)) {\n                nextItem.upload();\n                return;\n            }\n\n            this.onCompleteAll();\n            this.progress = this._getTotalProgress();\n            this._render();\n        }\n        /**********************\n         * STATIC\n         **********************/\n        /**\n         * Returns \"true\" if value an instance of File\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFile(value) {\n            return (File && value instanceof File);\n        }\n        /**\n         * Returns \"true\" if value an instance of FileLikeObject\n         * @param {*} value\n         * @returns {Boolean}\n         * @private\n         */\n        static isFileLikeObject(value) {\n            return value instanceof FileLikeObject;\n        }\n        /**\n         * Returns \"true\" if value is array like object\n         * @param {*} value\n         * @returns {Boolean}\n         */\n        static isArrayLikeObject(value) {\n            return (isObject(value) && 'length' in value);\n        }\n        /**\n         * Inherits a target (Class_1) by a source (Class_2)\n         * @param {Function} target\n         * @param {Function} source\n         */\n        static inherit(target, source) {\n            target.prototype = Object.create(source.prototype);\n            target.prototype.constructor = target;\n            target.super_ = source;\n        }\n    }\n\n\n    /**********************\n     * PUBLIC\n     **********************/\n    /**\n     * Checks a support the html5 uploader\n     * @returns {Boolean}\n     * @readonly\n     */\n    FileUploader.prototype.isHTML5 = !!(File && FormData);\n    /**********************\n     * STATIC\n     **********************/\n    /**\n     * @borrows FileUploader.prototype.isHTML5\n     */\n    FileUploader.isHTML5 = FileUploader.prototype.isHTML5;\n\n    \n    return FileUploader;\n}\n\n\n__identity.$inject = [\n    'fileUploaderOptions', \n    '$rootScope', \n    '$http', \n    '$window',\n    'FileLikeObject',\n    'FileItem'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileUploader.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    isElement,\n    isString\n    } = angular;\n\n\nexport default function __identity() {\n    \n    \n    return class FileLikeObject {\n        /**\n         * Creates an instance of FileLikeObject\n         * @param {File|HTMLInputElement|Object} fileOrInput\n         * @constructor\n         */\n        constructor(fileOrInput) {\n            var isInput = isElement(fileOrInput);\n            var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n            var postfix = isString(fakePathOrObject) ? 'FakePath' : 'Object';\n            var method = '_createFrom' + postfix;\n            this[method](fakePathOrObject);\n        }\n        /**\n         * Creates file like object from fake path string\n         * @param {String} path\n         * @private\n         */\n        _createFromFakePath(path) {\n            this.lastModifiedDate = null;\n            this.size = null;\n            this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n            this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n        }\n        /**\n         * Creates file like object from object\n         * @param {File|FileLikeObject} object\n         * @private\n         */\n        _createFromObject(object) {\n            this.lastModifiedDate = copy(object.lastModifiedDate);\n            this.size = object.size;\n            this.type = object.type;\n            this.name = object.name;\n        }\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileLikeObject.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    copy,\n    extend,\n    element,\n    isElement\n    } = angular;\n\n\nexport default function __identity($compile, FileLikeObject) {\n    \n    \n    return class FileItem {\n        /**\n         * Creates an instance of FileItem\n         * @param {FileUploader} uploader\n         * @param {File|HTMLInputElement|Object} some\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(uploader, some, options) {\n            var isInput = isElement(some);\n            var input = isInput ? element(some) : null;\n            var file = !isInput ? some : null;\n\n            extend(this, {\n                url: uploader.url,\n                alias: uploader.alias,\n                headers: copy(uploader.headers),\n                formData: copy(uploader.formData),\n                removeAfterUpload: uploader.removeAfterUpload,\n                withCredentials: uploader.withCredentials,\n                disableMultipart: uploader.disableMultipart,\n                method: uploader.method\n            }, options, {\n                uploader: uploader,\n                file: new FileLikeObject(some),\n                isReady: false,\n                isUploading: false,\n                isUploaded: false,\n                isSuccess: false,\n                isCancel: false,\n                isError: false,\n                progress: 0,\n                index: null,\n                _file: file,\n                _input: input\n            });\n\n            if (input) this._replaceNode(input);\n        }\n        /**********************\n         * PUBLIC\n         **********************/\n        /**\n         * Uploads a FileItem\n         */\n        upload() {\n            try {\n                this.uploader.uploadItem(this);\n            } catch(e) {\n                this.uploader._onCompleteItem(this, '', 0, []);\n                this.uploader._onErrorItem(this, '', 0, []);\n            }\n        }\n        /**\n         * Cancels uploading of FileItem\n         */\n        cancel() {\n            this.uploader.cancelItem(this);\n        }\n        /**\n         * Removes a FileItem\n         */\n        remove() {\n            this.uploader.removeFromQueue(this);\n        }\n        /**\n         * Callback\n         * @private\n         */\n        onBeforeUpload() {\n        }\n        /**\n         * Callback\n         * @param {Number} progress\n         * @private\n         */\n        onProgress(progress) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onSuccess(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onError(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onCancel(response, status, headers) {\n        }\n        /**\n         * Callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         */\n        onComplete(response, status, headers) {\n        }\n        /**********************\n         * PRIVATE\n         **********************/\n        /**\n         * Inner callback\n         */\n        _onBeforeUpload() {\n            this.isReady = true;\n            this.isUploading = true;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 0;\n            this.onBeforeUpload();\n        }\n        /**\n         * Inner callback\n         * @param {Number} progress\n         * @private\n         */\n        _onProgress(progress) {\n            this.progress = progress;\n            this.onProgress(progress);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onSuccess(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = true;\n            this.isCancel = false;\n            this.isError = false;\n            this.progress = 100;\n            this.index = null;\n            this.onSuccess(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onError(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = true;\n            this.isSuccess = false;\n            this.isCancel = false;\n            this.isError = true;\n            this.progress = 0;\n            this.index = null;\n            this.onError(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onCancel(response, status, headers) {\n            this.isReady = false;\n            this.isUploading = false;\n            this.isUploaded = false;\n            this.isSuccess = false;\n            this.isCancel = true;\n            this.isError = false;\n            this.progress = 0;\n            this.index = null;\n            this.onCancel(response, status, headers);\n        }\n        /**\n         * Inner callback\n         * @param {*} response\n         * @param {Number} status\n         * @param {Object} headers\n         * @private\n         */\n        _onComplete(response, status, headers) {\n            this.onComplete(response, status, headers);\n            if(this.removeAfterUpload) this.remove();\n        }\n        /**\n         * Destroys a FileItem\n         */\n        _destroy() {\n            if(this._input) this._input.remove();\n            if(this._form) this._form.remove();\n            delete this._form;\n            delete this._input;\n        }\n        /**\n         * Prepares to uploading\n         * @private\n         */\n        _prepareToUploading() {\n            this.index = this.index || ++this.uploader._nextIndex;\n            this.isReady = true;\n        }\n        /**\n         * Replaces input element on his clone\n         * @param {JQLite|jQuery} input\n         * @private\n         */\n        _replaceNode(input) {\n            var clone = $compile(input.clone())(input.scope());\n            clone.prop('value', null); // FF fix\n            input.css('display', 'none');\n            input.after(clone); // remove jquery dependency\n        }\n    }\n}\n\n\n__identity.$inject = [\n    '$compile',\n    'FileLikeObject'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileItem.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity() {\n\n\n    class FileDirective {\n        /**\n         * Creates instance of {FileDirective} object\n         * @param {Object} options\n         * @param {Object} options.uploader\n         * @param {HTMLElement} options.element\n         * @param {Object} options.events\n         * @param {String} options.prop\n         * @constructor\n         */\n        constructor(options) {\n            extend(this, options);\n            this.uploader._directives[this.prop].push(this);\n            this._saveLinks();\n            this.bind();\n        }\n        /**\n         * Binds events handles\n         */\n        bind() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this.element.bind(key, this[prop]);\n            }\n        }\n        /**\n         * Unbinds events handles\n         */\n        unbind() {\n            for(var key in this.events) {\n                this.element.unbind(key, this.events[key]);\n            }\n        }\n        /**\n         * Destroys directive\n         */\n        destroy() {\n            var index = this.uploader._directives[this.prop].indexOf(this);\n            this.uploader._directives[this.prop].splice(index, 1);\n            this.unbind();\n            // this.element = null;\n        }\n        /**\n         * Saves links to functions\n         * @private\n         */\n        _saveLinks() {\n            for(var key in this.events) {\n                var prop = this.events[key];\n                this[prop] = this[prop].bind(this);\n            }\n        }\n    }\n\n\n    /**\n     * Map of events\n     * @type {Object}\n     */\n    FileDirective.prototype.events = {};\n\n\n    return FileDirective;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDirective.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileSelect extends FileDirective {\n        /**\n         * Creates instance of {FileSelect} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    change: 'onChange'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'select'\n            });\n            \n            super(extendedOptions);\n            \n            if(!this.uploader.isHTML5) {\n                this.element.removeAttr('multiple');\n            }\n            this.element.prop('value', null); // FF fix\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * If returns \"true\" then HTMLInputElement will be cleared\n         * @returns {Boolean}\n         */\n        isEmptyAfterSelection() {\n            return !!this.element.attr('multiple');\n        }\n        /**\n         * Event handler\n         */\n        onChange() {\n            var files = this.uploader.isHTML5 ? this.element[0].files : this.element[0];\n            var options = this.getOptions();\n            var filters = this.getFilters();\n\n            if(!this.uploader.isHTML5) this.destroy();\n            this.uploader.addToQueue(files, options, filters);\n            if(this.isEmptyAfterSelection()) {\n                this.element.prop('value', null);\n                this.element.replaceWith(this.element = this.element.clone(true)); // IE fix\n            }\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileSelect.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend,\n    forEach\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileDrop extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy',\n                    drop: 'onDrop',\n                    dragover: 'onDragOver',\n                    dragleave: 'onDragLeave'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'drop'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Returns options\n         * @return {Object|undefined}\n         */\n        getOptions() {\n        }\n        /**\n         * Returns filters\n         * @return {Array<Function>|String|undefined}\n         */\n        getFilters() {\n        }\n        /**\n         * Event handler\n         */\n        onDrop(event) {\n            var transfer = this._getTransfer(event);\n            if(!transfer) return;\n            var options = this.getOptions();\n            var filters = this.getFilters();\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n            this.uploader.addToQueue(transfer.files, options, filters);\n        }\n        /**\n         * Event handler\n         */\n        onDragOver(event) {\n            var transfer = this._getTransfer(event);\n            if(!this._haveFiles(transfer.types)) return;\n            transfer.dropEffect = 'copy';\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._addOverClass, this);\n        }\n        /**\n         * Event handler\n         */\n        onDragLeave(event) {\n            if(event.currentTarget === this.element[0]) return;\n            this._preventAndStop(event);\n            forEach(this.uploader._directives.over, this._removeOverClass, this);\n        }\n        /**\n         * Helper\n         */\n        _getTransfer(event) {\n            return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n        }\n        /**\n         * Helper\n         */\n        _preventAndStop(event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        /**\n         * Returns \"true\" if types contains files\n         * @param {Object} types\n         */\n        _haveFiles(types) {\n            if(!types) return false;\n            if(types.indexOf) {\n                return types.indexOf('Files') !== -1;\n            } else if(types.contains) {\n                return types.contains('Files');\n            } else {\n                return false;\n            }\n        }\n        /**\n         * Callback\n         */\n        _addOverClass(item) {\n            item.addOverClass();\n        }\n        /**\n         * Callback\n         */\n        _removeOverClass(item) {\n            item.removeOverClass();\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileDrop.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nlet {\n    extend\n    } = angular;\n\n\nexport default function __identity(FileDirective) {\n    \n    \n    return class FileOver extends FileDirective {\n        /**\n         * Creates instance of {FileDrop} object\n         * @param {Object} options\n         * @constructor\n         */\n        constructor(options) {\n            let extendedOptions = extend(options, {\n                // Map of events\n                events: {\n                    $destroy: 'destroy'\n                },\n                // Name of property inside uploader._directive object\n                prop: 'over',\n                // Over class\n                overClass: 'nv-file-over'\n            });\n            \n            super(extendedOptions);\n        }\n        /**\n         * Adds over class\n         */\n        addOverClass() {\n            this.element.addClass(this.getOverClass());\n        }\n        /**\n         * Removes over class\n         */\n        removeOverClass() {\n            this.element.removeClass(this.getOverClass());\n        }\n        /**\n         * Returns over class\n         * @returns {String}\n         */\n        getOverClass() {\n            return this.overClass;\n        }\n    }\n}\n\n\n__identity.$inject = [\n    'FileDirective'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/services/FileOver.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileSelect) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileSelect({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileSelect'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileSelect.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity($parse, FileUploader, FileDrop) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            if (!uploader.isHTML5) return;\n\n            var object = new FileDrop({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOptions = $parse(attributes.options).bind(object, scope);\n            object.getFilters = () => attributes.filters;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    '$parse',\n    'FileUploader',\n    'FileDrop'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileDrop.js\n **/","'use strict';\n\n\nimport CONFIG from './../config.json';\n\n\nexport default function __identity(FileUploader, FileOver) {\n\n\n    return {\n        link: (scope, element, attributes) => {\n            var uploader = scope.$eval(attributes.uploader);\n\n            if (!(uploader instanceof FileUploader)) {\n                throw new TypeError('\"Uploader\" must be an instance of FileUploader');\n            }\n\n            var object = new FileOver({\n                uploader: uploader,\n                element: element\n            });\n\n            object.getOverClass = () => attributes.overClass || object.overClass;\n        }\n    };\n\n\n}\n\n\n__identity.$inject = [\n    'FileUploader',\n    'FileOver'\n];\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/FileOver.js\n **/"],"sourceRoot":""}